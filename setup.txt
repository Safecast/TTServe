## Copyright 2017 Inca Roads LLC.  All rights reserved.
## Use of this source code is governed by licenses granted by the
## copyright holder including that found in the LICENSE file.

##
## TO CREATE A NEW INSTANCE
##
## 1. Create the instance of UBUNTU using default settings so that it has a public IP address, using safecastdev key
## 2. Assign the correct security group, i.e.
##    In Actions / Networking / Change Security Groups, select the TTSERVE security group and Assign Security Groups
## 3. Add the instance to both the 80 and 8080 load balancer Target Groups
## 4. Make sure that locally you have the safecastdev.pem key on your keychain ie
##    ssh-add -K /keybase/private/rozzie,matschaffer/safecastdev.pem
## 5. SSH into the instance using ubuntu@<instance-domain-name>
##

##
## FIRST TIME INSTANCE SETUP PROCEDURE
##

## Update the updater
sudo apt update
## Install GIT so we can pull new versions
sudo apt install git --assume-yes
## Install GOLANG so we can rebuild our code
sudo apt install golang-go --assume-yes
## Install NFS so we can mount an EFS filesystem on amazon
sudo apt-get install nfs-common --assume-yes
## Verify that the version of GOLANG is at least go1.6.2
go version

## Add these to the end of ~/.profile with NANO editor
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export TT=$GOPATH/src/github.com/rayozzie/teletype-ttserve

## Fetch our app package
mkdir $HOME/go && mkdir $HOME/go/src && mkdir $HOME/go/src/github.com && mkdir $HOME/go/src/github.com/rayozzie && cd $HOME/go/src/github.com/rayozzie
git clone https://ttserve:teletype123@github.com/rayozzie/teletype-ttserve

## Use "crontab -e" and add this line
@reboot screen -dmS ttserve $HOME/go/src/github.com/rayozzie/teletype-ttserve/run.sh

## REBOOT THE AWS INSTANCE
## You can then come back via SSH and use 'screen' to look around 

## Do this to see if our screen is already running:
screen -ls
## If you see the 'ttserve' instance, do:
screen -r
## If, while watching console, you want to return to main screen console, press:
^a d
## If you do NOT see the ttserve instance, do:
screen -S ttserve
cd $TT && ./run.sh
## If, while watching console, you want to force a restart/refresh from git, press:
^c
## If, while watching the console, you want to exit SSH, press:
^a d
exit

## Note that if you STOP the any instance except for TTSERVE0, the address will change
## so that you will need to SSH into a different domain name.  Other than that, the
## "ANYTIME SSH'ING" procedure above will work to get it going again after Start.

## SCREEN COMMAND REFERENCE
## Running in background
##   create a new screen and switch to it
screen -S ttserve
##   list screens
screen -ls
##   delete the current screen and logout
exit
##   detach screen (leave and go back to main shell)
screen -d
##   detach screen when not at a command line
^a d
##   go back to the one other detached screen
screen -R
##   go back to detached screen
screen -r <pid# or name>
##   detach a specific attached screen
screen -d  <pid# or name>
##   go back to a specific attached screen
screen -d -r <pid# or name>
##   kill all screens and current window
screen -X quit

