// 1. Create the instance of UBUNTU
// 2. Make sure it has a public IP address

// On Google Compute
// .. In VM Instances
// .. Click the name to go into an instance
// .. Scroll down and click the Network (usually "default")
// ..Add an "allow-8080" firewall rule for tcp:8080 that applies to all targets
// ..Add an "allow-8081" firewall rule for udp:8081 that applies to all targets
// ..Add an "allow-8082" firewall rule for tcp:8082 that applies to all targets

// On Amazon AWS
// In Network & Security / Security Groups
// Create or Edit the rules of the security group attached to the instance

// On Amazon Lightsail
// - create the above allow rules in networking
// - create a static ip address

// Now install required tools
sudo apt update
sudo apt install git --assume-yes
sudo apt install golang-go --assume-yes

// So that we can mount an EFS filesystem on amazon
sudo apt-get install nfs-common
cd $HOME
sudo mkdir efs
sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 fs-dd1ad674.efs.us-west-2.amazonaws.com:/ efs

// Make sure that the version of golang is up to date

// Create our app workspace
mkdir $HOME/go
// Add it to .profile with NANO editor, so that this is what should be at the end
// (not sure if this path mod is needed if apt install is used to load golang)
export PATH=$PATH:/usr/local/go/bin
export GOPATH=$HOME/go

// bring down our stuff
cd ~/go
mkdir src
cd src
mkdir github.com
cd github.com
mkdir rayozzie
cd rayozzie
git clone https://ttserve:teletype123@github.com/rayozzie/teletype-ttserve
cd teletype-ttserve
go get
./run.sh

// Running in background
//   create a new screen and switch to it
screen -S teletype
//   list screens
screen -ls
//   delete the current screen and logout
exit
//   detach screen (leave and go back to main shell)
screen -d
//   detach screen when not at a command line
^a d
//   go back to the one other detached screen
screen -R
//   go back to detached screen
screen -r <pid# or name>
//   detach a specific attached screen
screen -d  <pid# or name>
//   go back to a specific attached screen
screen -d -r <pid# or name>
//   kill all screens and current window
screen -X quit

// Note for posterity that if the Github "pull" methodology
// fails for whatever reason, that the method to push files
// to gcloud is:
gcloud compute copy-files *.go rozzie@teletype-1:~/go/src/ttserve
gcloud compute copy-files *.sh rozzie@teletype-1:~/go/src/ttserve
